spring.application.name=PaymentService

server.port=8085

# --- Database connection settings ---
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/payment_db}
spring.datasource.username=${PAYMENT_DB_USER:pay_user}
spring.datasource.password=${PAYMENT_DB_USER:pay_pass}
spring.datasource.driver-class-name=org.postgresql.Driver

# --- JPA & Hibernate ---
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none

#spring.sql.init.mode=always
#spring.jpa.defer-datasource-initialization=true

spring.mvc.problemdetails.enabled=true

# --- PayPal Settings (should be set via environment variables or .env) ---
paypal.client-id=${PAYPAL_CLIENT_ID}
paypal.client-secret=${PAYPAL_CLIENT_SECRET}
paypal.currency=${PAYPAL_CURRENCY:EUR}
paypal.return-url=${PAYPAL_RETURN_URL:http://localhost:8085/payments/confirm}
paypal.cancel-url=${PAYPAL_CANCEL_URL:http://localhost:8080/payment-cancelled}
paypal.environment=${PAYPAL_ENVIRONMENT:sandbox}

# --- Kafka Settings ---
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=paypal-demo
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.listener.ack-mode=manual_immediate

# --- Swagger / OpenAPI ---
springdoc.swagger-ui.path=/openapi/swagger-ui.html
springdoc.api-docs.path=/openapi/v1/api-docs

# --- Flyway ---
spring.flyway.enabled=true
spring.flyway.target=latest
spring.flyway.locations=classpath:db/migration
