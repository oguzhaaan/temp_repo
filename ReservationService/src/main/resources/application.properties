spring.application.name=ReservationService

server.port=8081

# External service URLs with local fallback
user-service.base-url=${USER_SERVICE_BASE_URL:http://localhost:8082/api/users}
payment.service.base-url=${PAYMENT_SERVICE_BASE_URL:http://localhost:8085}

# Datasource config
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/reservation_db}
spring.datasource.username=${DB_USER:res_user}
spring.datasource.password=${DB_PASSWORD:res_pass}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=always

#spring.sql.init.mode=always
#spring.jpa.defer-datasource-initialization=true
spring.mvc.problemdetails.enabled=true

springdoc.swagger-ui.path=/openapi/swagger-ui.html
springdoc.api-docs.path=/openapi/v1/api-docs

spring.flyway.enabled=true
spring.flyway.target=latest
spring.flyway.locations=classpath:db/migration

spring.main.allow-bean-definition-overriding=true

# Kafka configuration
spring.kafka.consumer.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.consumer.group-id=consumer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.listener.ack-mode=manual_immediate
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}



